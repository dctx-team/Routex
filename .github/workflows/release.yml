name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun test

      - name: Create release archive
        run: |
          mkdir -p release
          cp -r src release/
          cp package.json bun.lock README.md LICENSE tsconfig.json release/
          cp -r docs release/
          cd release
          tar -czf ../routex-${{ github.ref_name }}.tar.gz .
          cd ..

      - name: Generate changelog
        id: changelog
        run: |
          # Get previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          if [ -z "$PREV_TAG" ]; then
            CHANGELOG="Initial release"
          else
            CHANGELOG=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            routex-${{ github.ref_name }}.tar.gz
          body: |
            ## Changes

            ${{ steps.changelog.outputs.changelog }}

            ## Installation

            ### Using Docker (Recommended)

            ```bash
            # Pull the image
            docker pull dctx/routex:${{ github.ref_name }}

            # Run with docker-compose
            wget https://raw.githubusercontent.com/dctx-team/Routex/${{ github.ref_name }}/docker-compose.yml
            docker-compose up -d
            ```

            ### From Source

            ```bash
            # Download and extract
            wget https://github.com/dctx-team/Routex/releases/download/${{ github.ref_name }}/routex-${{ github.ref_name }}.tar.gz
            tar -xzf routex-${{ github.ref_name }}.tar.gz

            # Install dependencies
            bun install

            # Start server
            bun run src/server.ts
            ```

            ## What's Included

            - ✅ Complete source code
            - ✅ Security features (encryption, signature verification, rate limiting)
            - ✅ Metrics and tracing
            - ✅ Internationalization (i18n)
            - ✅ Comprehensive documentation
            - ✅ Docker support

            ## Requirements

            - Bun >= 1.2.23
            - Node.js >= 20 (optional)
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        continue-on-error: true

      - name: Extract version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            dctx/routex:latest
            dctx/routex:${{ steps.version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        continue-on-error: true
